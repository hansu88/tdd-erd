openapi: 3.0.0
info:
  title: HHPlus 핵심 API (재고 실시간 포함)
  version: 1.0.0
  description: 상품 조회, 재고 실시간 확인, 인기 상품, 장바구니, 주문/결제, 쿠폰 API (Mock용)

paths:
  # 1. 상품 목록 조회
  /api/products:
    get:
      summary: 상품 목록 조회 (가격, 상태)
      responses:
        '200':
          description: 성공
          content:
            application/json:
              example:
                products:
                  - productId: 1
                    productName: "기본 반팔 티셔츠"
                    basePrice: 19000
                    status: "ACTIVE"
                  - productId: 2
                    productName: "슬림 청바지"
                    basePrice: 49000
                    status: "ACTIVE"

  # 2. 재고 실시간 확인
  /api/products/{productId}/stock:
    get:
      summary: 상품 재고 실시간 확인
      parameters:
        - name: productId
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: 성공
          content:
            application/json:
              example:
                productId: 1
                productName: "기본 반팔 티셔츠"
                options:
                  - optionId: 101
                    optionName: "화이트-M"
                    availableStock: 50
                  - optionId: 102
                    optionName: "빨강-L"
                    availableStock: 5

  # 3. 인기 상품 Top5
  /api/products/popular:
    get:
      summary: 인기 상품 통계 (최근 3일, Top5)
      parameters:
        - name: days
          in: query
          schema: { type: integer, default: 3 }
        - name: limit
          in: query
          schema: { type: integer, default: 5 }
      responses:
        '200':
          description: 성공
          content:
            application/json:
              example:
                period: "2025-10-30"
                products:
                  - rank: 1
                    productId: 1
                    productName: "기본 반팔 티셔츠"
                    salesCount: 50
                    totalRevenue: 950000

  # 4. 장바구니 담기
  /api/carts:
    post:
      summary: 장바구니 담기
      requestBody:
        required: true
        content:
          application/json:
            example:
              memberId: 1
              optionId: 101
              quantity: 2
      responses:
        '200':
          description: 성공
          content:
            application/json:
              example:
                cartId: 1
                totalItems: 2

    get:
      summary: 장바구니 조회
      parameters:
        - name: memberId
          in: query
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: 성공
          content:
            application/json:
              example:
                items:
                  - cartId: 1
                    productName: "기본 반팔 티셔츠"
                    optionName: "화이트-M"
                    quantity: 2
                    unitPrice: 19000
                    totalPrice: 38000
                totalAmount: 38000

  # 5. 장바구니 삭제
  /api/carts/{cartId}:
    delete:
      summary: 장바구니 삭제
      parameters:
        - name: cartId
          in: path
          required: true
          schema: { type: integer }
      responses:
        '204':
          description: 삭제 성공

  # 6. 주문 생성
  /api/orders:
    post:
      summary: 주문 생성 (재고 차감)
      requestBody:
        required: true
        content:
          application/json:
            example:
              memberId: 1
              cartIds: [1,2]
              memberCouponId: null
      responses:
        '200':
          description: 성공
          content:
            application/json:
              example:
                orderId: 1
                orderNumber: "ORD-20251030-0001"
                status: "PENDING"
                finalAmount: 38000

  # 7. 주문 결제
  /api/orders/{orderId}/pay:
    post:
      summary: 잔액 결제
      parameters:
        - name: orderId
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            example:
              memberId: 1
      responses:
        '200':
          description: 결제 성공
          content:
            application/json:
              example:
                orderId: 1
                status: "CONFIRMED"
                paidAmount: 38000
                remainingBalance: 62000

  # 8. 쿠폰 발급 (선착순)
  /api/coupons/{couponId}/issue:
    post:
      summary: 쿠폰 발급
      parameters:
        - name: couponId
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            example:
              memberId: 1
      responses:
        '200':
          description: 발급 성공
          content:
            application/json:
              example:
                memberCouponId: 1
                couponName: "10% 할인쿠폰"
                discountValue: 3800
                expiredAt: "2025-11-30T23:59:59"

  # 9. 내 쿠폰 조회
  /api/coupons/my:
    get:
      summary: 내 쿠폰 목록 조회
      parameters:
        - name: memberId
          in: query
          required: true
          schema: { type: integer }
        - name: status
          in: query
          schema:
            type: string
            enum: [UNUSED, USED, EXPIRED]
      responses:
        '200':
          description: 성공
          content:
            application/json:
              example:
                coupons:
                  - memberCouponId: 1
                    couponName: "10% 할인쿠폰"
                    discountType: "RATE"
                    discountValue: 3800
                    status: "UNUSED"
                    expiredAt: "2025-11-30T23:59:59"