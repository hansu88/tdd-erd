sequenceDiagram
    participant Client
    participant OrdController
    participant OrdService
    participant VariantRepository
    participant OrdRepository
    participant OrdItemRepository
    participant H2Database

    Note over Client,H2Database: POST /api/order - 주문 생성

    Client->>OrdController: POST /api/order { uid, items: [{vid, qty}], couponId }
    OrdController->>OrdService: createOrder(request)

    Note over OrdService: 1. 재고 확인

    loop for each item
        OrdService->>VariantRepository: findById(vid)
        VariantRepository->>H2Database: SELECT * FROM GOODS_VARIANT WHERE vid = ?
        H2Database-->>VariantRepository: GoodsVariant
        VariantRepository-->>OrdService: GoodsVariant

        Note over OrdService: 재고 확인 및 차감 (Pessimistic Lock)
        OrdService->>VariantRepository: updateStock(vid, qty)
        VariantRepository->>H2Database: UPDATE GOODS_VARIANT SET stock = stock - ? WHERE vid = ? AND stock >= ?
        H2Database-->>VariantRepository: Success
        VariantRepository-->>OrdService: void
    end

    Note over OrdService: 2. 총 금액 계산

    alt 쿠폰 있음
        Note over OrdService: 3. 쿠폰 할인 적용
    end

    Note over OrdService: 4. 주문 생성

    OrdService->>OrdRepository: save(ord)
    OrdRepository->>H2Database: INSERT INTO ORD (uid, total, discount, final)
    H2Database-->>OrdRepository: Ord
    OrdRepository-->>OrdService: Ord

    Note over OrdService: 5. 주문 상품 생성

    loop for each item
        OrdService->>OrdItemRepository: save(ordItem)
        OrdItemRepository->>H2Database: INSERT INTO ORD_ITEM (oid, vid, qty, price)
        H2Database-->>OrdItemRepository: OrdItem
        OrdItemRepository-->>OrdService: OrdItem
    end

    OrdService-->>OrdController: OrderResponseDto
    OrdController-->>Client: 200 OK { oid, items, totalAmount, status: "PENDING" }