sequenceDiagram
    actor User
    participant API as CouponController
    participant Service as CouponService
    participant Repo as MemberCouponRepository
    participant DB as MySQL

    User->>API: GET /api/coupons/my?memberId=1&status=UNUSED
    API->>Service: getMemberCoupons(memberId=1, status="UNUSED")

    Service->>Repo: findByMemberIdAndStatus(1, "UNUSED")
    Repo->>DB: SELECT mc.member_coupon_id,mc.status,mc.issued_at,mc.expired_at,c.coupon_name,c.discount_type,c.discount_value,c.min_order_amount,c.max_discount_amountFROM member_coupon mcJOIN coupon cON mc.coupon_id = c.coupon_idWHERE mc.member_id = 1AND mc.status = 'UNUSED'ORDER BY mc.expired_at ASC

    DB-->>Repo: List
    Repo-->>Service: List

    Service->>Service: DTO 변환
    Service-->>API: MyCouponsResponse{coupons: [...]}

    API-->>User: 200 OK