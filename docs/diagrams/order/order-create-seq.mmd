sequenceDiagram
    actor User
    participant API as OrderController
    participant OrderSvc as OrderService
    participant StockSvc as StockService
    participant DB as MySQL

    User->>API: POST /api/orders
    Note over User,API: {memberId: 1,cartIds: [1, 2],memberCouponId: 1}

    API->>OrderSvc: createOrder(request)
    OrderSvc->>DB: START TRANSACTION

    Note over OrderSvc,DB: Step 1: 장바구니 조회
    OrderSvc->>DB: SELECT c.*, po.*, p.*FROM cart cJOIN product_option poJOIN product pWHERE c.cart_id IN (1, 2)

    alt 장바구니 없음
        DB-->>OrderSvc: Empty
        OrderSvc->>DB: ROLLBACK
        OrderSvc-->>API: CartNotFoundException
        API-->>User: 404 Not Found
    else 장바구니 존재
        DB-->>OrderSvc: List

        Note over OrderSvc,DB: Step 2: 재고 차감
        OrderSvc->>StockSvc: reserveStocks(items)

        loop 각 장바구니 항목
            StockSvc->>DB: UPDATE stock SETavailable_quantity -= qty,reserved_quantity += qtyWHERE option_id = ?AND available_quantity >= qty

            alt 재고 부족 (UPDATE 실패)
                DB-->>StockSvc: affected rows = 0
                StockSvc->>DB: ROLLBACK
                StockSvc-->>OrderSvc: OutOfStockException
                OrderSvc-->>API: 409 Conflict
                API-->>User: 재고 부족
            end

            StockSvc->>DB: INSERT INTO stock_history(type='RESERVE', quantity_change)
        end

        Note over OrderSvc,DB: Step 3: 쿠폰 적용
        alt 쿠폰 사용
            OrderSvc->>DB: SELECT * FROM member_couponWHERE member_coupon_id = 1AND status = 'UNUSED'
            OrderSvc->>OrderSvc: 할인 계산(discountAmount)
            OrderSvc->>DB: UPDATE member_couponSET status = 'USED',used_at = NOW()
        end

        Note over OrderSvc,DB: Step 4: 주문 생성
        OrderSvc->>OrderSvc: 주문번호 생성(ORD-20250101-000001)
        OrderSvc->>DB: INSERT INTO orders(order_number, status='PENDING',product_total_amount,discount_amount,final_amount)

        OrderSvc->>DB: INSERT INTO order_item(각 장바구니 항목)

        Note over OrderSvc,DB: Step 5: 장바구니 삭제
        OrderSvc->>DB: DELETE FROM cartWHERE cart_id IN (1, 2)

        OrderSvc->>DB: COMMIT
        OrderSvc-->>API: OrderResponse{orderId, orderNumber,status: "PENDING",finalAmount}
        API-->>User: 201 Created
    end