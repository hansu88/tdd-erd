sequenceDiagram
    participant Client
    participant OrdController
    participant PaymentService
    participant OrdRepository
    participant BalanceRepository
    participant PaymentRepository
    participant H2Database

    Note over Client,H2Database: POST /api/order/{oid}/pay - 주문 결제

    Client->>OrdController: POST /api/order/1/pay { uid, method: "BALANCE" }
    OrdController->>PaymentService: processPayment(oid, request)

    Note over PaymentService: 1. 주문 조회

    PaymentService->>OrdRepository: findById(oid)
    OrdRepository->>H2Database: SELECT * FROM ORD WHERE oid = ?
    H2Database-->>OrdRepository: Result

    alt 주문이 없음
        OrdRepository-->>PaymentService: Empty
        PaymentService-->>OrdController: throw NotFoundException
        OrdController-->>Client: 404 Not Found { error: "O002", message: "주문을 찾을 수 없습니다" }
    else 주문 존재
        OrdRepository-->>PaymentService: Ord

        Note over PaymentService: 2. 잔액 확인 (Pessimistic Lock)

        PaymentService->>BalanceRepository: findByUserIdForUpdate(uid)
        BalanceRepository->>H2Database: SELECT * FROM BALANCE WHERE uid = ? FOR UPDATE
        H2Database-->>BalanceRepository: Balance
        BalanceRepository-->>PaymentService: Balance

        alt 잔액 부족
            PaymentService-->>OrdController: throw InsufficientBalanceException
            OrdController-->>Client: 402 Payment Required<br/>{ error: "PAY001", message: "잔액이 부족합니다" }
        else 잔액 충분
            Note over PaymentService: 3. 잔액 차감

            PaymentService->>BalanceRepository: updateBalance(uid, amount)
            BalanceRepository->>H2Database: UPDATE BALANCE<br/>SET bal = bal - ?<br/>WHERE uid = ?
            H2Database-->>BalanceRepository: Success
            BalanceRepository-->>PaymentService: void

            Note over PaymentService: 4. 결제 기록 생성

            PaymentService->>PaymentRepository: save(payment)
            PaymentRepository->>H2Database: INSERT INTO PAYMENT<br/>(oid, amt, method, status)
            H2Database-->>PaymentRepository: Payment
            PaymentRepository-->>PaymentService: Payment
            PaymentService-->>OrdController: PaymentResponseDto
            OrdController-->>Client: 200 OK<br/>{ pid, oid, amt, status: "SUCCESS", remainingBalance }
        end
    end