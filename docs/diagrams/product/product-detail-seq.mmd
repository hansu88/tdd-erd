
sequenceDiagram
    actor User
    participant API as ProductController
    participant Service as ProductService
    participant ProdRepo as ProductRepository
    participant OptRepo as OptionRepository
    participant DB as MySQL

    User->>API: GET /api/products/1
    API->>Service: getProductDetail(1)

    Service->>ProdRepo: findById(1)
    ProdRepo->>DB: SELECT * FROM productWHERE product_id = 1

    alt 상품 없음
        DB-->>ProdRepo: Empty
        ProdRepo-->>Service: Optional.empty()
        Service-->>API: ProductNotFoundException
        API-->>User: 404 Not Found{error: "PRODUCT_NOT_FOUND"}
    else 상품 존재
        DB-->>ProdRepo: Product

        Service->>OptRepo: findByProductIdWithStock(1)
        OptRepo->>DB: SELECT po.option_id, po.option_name,po.additional_price,s.available_quantityFROM product_option poLEFT JOIN stock sON po.option_id = s.option_idWHERE po.product_id = 1

        DB-->>OptRepo: List
        OptRepo-->>Service: List

        Service->>Service: finalPrice 계산(basePrice + additionalPrice)
        Service-->>API: ProductDetailResponse
        API-->>User: 200 OK{productId, options: [...]}
    end